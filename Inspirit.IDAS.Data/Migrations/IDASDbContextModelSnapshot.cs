// <auto-generated />
using System;
using Inspirit.IDAS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inspirit.IDAS.Data.Migrations
{
    [DbContext(typeof(IDASDbContext))]
    partial class IDASDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inspirit.IDAS.Data.ApplicationSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Remarks");

                    b.Property<string>("SettingName");

                    b.Property<string>("SettingValue");

                    b.HasKey("Id");

                    b.ToTable("ApplicationSetting");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.BatchTrace", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AdminCertified");

                    b.Property<string>("AgeGroupGenders");

                    b.Property<string>("AlloyBreakDowns");

                    b.Property<Guid?>("ApprovedBy");

                    b.Property<DateTime>("ApprovedOnDate");

                    b.Property<int>("BatchNumber");

                    b.Property<Guid?>("CustomerId");

                    b.Property<Guid>("CustomerUserID");

                    b.Property<string>("FileName");

                    b.Property<int>("FoundRecords");

                    b.Property<string>("IdNumbers");

                    b.Property<string>("IncomeBrackets");

                    b.Property<bool>("IsDataDownloaded");

                    b.Property<string>("LocationServices");

                    b.Property<string>("MaritalStaus");

                    b.Property<string>("OutPutFileName");

                    b.Property<Guid?>("ProFormaInvoiceId");

                    b.Property<string>("ProfileGender");

                    b.Property<string>("RiskCategories");

                    b.Property<int>("TotalRecords");

                    b.Property<string>("TotalRecordsAvailable");

                    b.Property<DateTime>("UploadDate");

                    b.HasKey("ID");

                    b.HasIndex("CustomerUserID");

                    b.ToTable("BatchTraces");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.ContactUs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Business");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<bool>("IsRead");

                    b.Property<string>("Message")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountDeptContactPerson");

                    b.Property<string>("AccountDeptEmail")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDeptFaxNumber");

                    b.Property<string>("AccountDeptTelephoneNumber");

                    b.Property<Guid?>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedDate");

                    b.Property<string>("AuthCellNumber")
                        .IsRequired();

                    b.Property<string>("AuthEmail");

                    b.Property<string>("AuthFirstName");

                    b.Property<string>("AuthIDNumber");

                    b.Property<string>("AuthPosition");

                    b.Property<string>("AuthSurName");

                    b.Property<string>("BillingEmail")
                        .HasMaxLength(100);

                    b.Property<string>("BillingType");

                    b.Property<string>("BranchLocation")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessDescription");

                    b.Property<string>("Client_Logo");

                    b.Property<string>("Code");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CreditBureauInformation");

                    b.Property<string>("CustOwnIDNumber");

                    b.Property<string>("EnquiryReason");

                    b.Property<string>("FaxNumber");

                    b.Property<bool?>("IsRestricted");

                    b.Property<bool>("IsXDS");

                    b.Property<Guid?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("PhysicalAddress")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PostalAddress");

                    b.Property<string>("Purpose");

                    b.Property<string>("RegistrationName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("RegistrationNumber")
                        .IsRequired();

                    b.Property<string>("Status");

                    b.Property<string>("SubscriberId");

                    b.Property<string>("TabSelected");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired();

                    b.Property<string>("TradingName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Turnover");

                    b.Property<string>("TypeOfBusiness")
                        .IsRequired();

                    b.Property<string>("VATNumber");

                    b.Property<string>("WebAddress");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerDSA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid?>("DataServicesAgreementId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DataServicesAgreementId");

                    b.ToTable("CustomerDSAs");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyId");

                    b.Property<Guid>("CompanyUserId");

                    b.Property<int>("CreditPoints");

                    b.Property<Guid?>("CustomerUserId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("IdOrPassportNumber");

                    b.Property<string>("InputType");

                    b.Property<string>("LogType");

                    b.Property<string>("SearchCriteria");

                    b.Property<string>("SearchType");

                    b.Property<Guid?>("WorkorderId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUserId");

                    b.HasIndex("WorkorderId");

                    b.ToTable("CustomerLogs");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Active");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProducts");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedDate");

                    b.Property<bool?>("BatchwithoutSub");

                    b.Property<string>("Code");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("IDNumber")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<bool?>("IsRestricted");

                    b.Property<bool?>("IsUserLoggedIn");

                    b.Property<DateTime?>("LastLoginDate");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime?>("LastPasswordResetDate");

                    b.Property<bool?>("LeadswithoutSub");

                    b.Property<bool?>("MAchAddressCHK");

                    b.Property<string>("MacAddresses");

                    b.Property<string>("Message");

                    b.Property<Guid?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Status");

                    b.Property<Guid?>("SubscriptionId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("CustomerUsers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.DataServicesAgreement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("EffectiveDate");

                    b.Property<string>("FilePath");

                    b.Property<bool>("IsPublished");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("DataServicesAgreements");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.DoNotCallRegistry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CurrentDate");

                    b.Property<string>("Emailid");

                    b.Property<string>("Idnumber");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("DoNotCallRegistrys");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MailContent");

                    b.Property<string>("Subject");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.ApplicationMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message")
                        .HasMaxLength(250);

                    b.Property<string>("Name");

                    b.Property<bool>("Showmessage");

                    b.HasKey("Id");

                    b.ToTable("ApplicationMessages");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.BatchProcessFileGeneration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BatchId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CustomerID");

                    b.Property<Guid>("CustomerUserId");

                    b.Property<bool>("Executed");

                    b.Property<DateTime?>("ExecutedDate");

                    b.Property<string>("IdNumber");

                    b.HasKey("Id");

                    b.ToTable("BatchProcessFileGeneration");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Creditnote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("CreditNoteDate");

                    b.Property<int>("CreditNoteNumber");

                    b.Property<decimal>("CreditNoteValue");

                    b.Property<Guid>("InvoiceId");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Creditnotes");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Invoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillingType");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Discount");

                    b.Property<DateTime>("EmailSendDate");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<string>("InvoiceDisplayNumber");

                    b.Property<int>("InvoiceNumber");

                    b.Property<bool>("IsCreditNoteRaised");

                    b.Property<bool>("IsEmailSend");

                    b.Property<bool>("IsTaxinvSent");

                    b.Property<bool>("ProFormaInvoice");

                    b.Property<int>("ReferenceNumber");

                    b.Property<string>("Remarks");

                    b.Property<decimal>("SubTotal");

                    b.Property<Guid?>("SubscriptionID");

                    b.Property<decimal>("Total");

                    b.Property<decimal>("VatTotal");

                    b.Property<bool>("isCancelled");

                    b.Property<bool>("isSubmited");

                    b.Property<bool>("ispaid");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.InvoiceLineItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillingType")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<Guid>("InvoiceID");

                    b.Property<decimal>("NetAmount");

                    b.Property<Guid?>("ProductPackageRateID");

                    b.Property<int>("Quantity");

                    b.Property<Guid?>("SubscriptionID");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UsageType")
                        .HasMaxLength(20);

                    b.Property<decimal>("VatAmount");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProductPackageRateID");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("InvoiceLineItems");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.LeadsGenaration", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AdminCertified");

                    b.Property<string>("AgeGroupGenders");

                    b.Property<string>("AlloyBreakDowns");

                    b.Property<Guid?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedOnDate");

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid>("CustomerUserID");

                    b.Property<string>("IncomeBrackets");

                    b.Property<string>("InputDetail");

                    b.Property<DateTime>("LeadsDate");

                    b.Property<int>("LeadsNumber");

                    b.Property<string>("LocationServices");

                    b.Property<string>("MaritalStaus");

                    b.Property<string>("OutPutFileName");

                    b.Property<string>("OutputDetail");

                    b.Property<Guid?>("ProFormaInvoiceId");

                    b.Property<string>("ProfileGender");

                    b.Property<bool>("ProfileReport");

                    b.Property<int>("RequestedRecors");

                    b.Property<string>("RiskCategories");

                    b.Property<string>("TotalRecordsAvailable");

                    b.HasKey("ID");

                    b.ToTable("LeadsGenaration");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Comments");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("InvoiceId");

                    b.Property<int>("Number");

                    b.Property<decimal?>("PaymentAmountReceive");

                    b.Property<DateTime?>("PaymentReceivedDate");

                    b.Property<string>("PaymentType");

                    b.Property<string>("Reference");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.ProFormaInvoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("EmailSendDate");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<bool>("IsEmailSend");

                    b.Property<bool>("IsProformal");

                    b.Property<bool>("IsSubmitted");

                    b.Property<int>("ProFormaInvoiceNumber");

                    b.Property<string>("ProformaDisplyNumber");

                    b.Property<int>("ReferenceNumber");

                    b.Property<string>("Remarks");

                    b.Property<string>("Status");

                    b.Property<decimal>("SubTotal");

                    b.Property<decimal>("Total");

                    b.Property<decimal>("VatTotal");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.ToTable("ProFormaInvoices");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.ProformaInvoiceLineItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("ProformaInvoiceId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProformaInvoiceId");

                    b.ToTable("ProformaInvoiceLineItems");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.SubscriptionLicense", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AssignedDate");

                    b.Property<Guid>("CustomerUserId");

                    b.Property<bool>("IsActive");

                    b.Property<Guid?>("SubscriptionItemId");

                    b.HasKey("ID");

                    b.HasIndex("CustomerUserId");

                    b.HasIndex("SubscriptionItemId");

                    b.ToTable("SubscriptionLicences");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Workorder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Credits");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("EndDate");

                    b.Property<Guid?>("InvoiceLineItemId");

                    b.Property<Guid>("ProductPackageId");

                    b.Property<string>("ServiceType");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.Property<Guid?>("SubscriptionItemID");

                    b.Property<bool>("isCancelled");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductPackageId");

                    b.HasIndex("SubscriptionItemID");

                    b.ToTable("Workorders");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Keyword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.LeadFileGeneration", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CustomerID");

                    b.Property<Guid>("CustomerUserId");

                    b.Property<bool>("Executed");

                    b.Property<DateTime?>("ExecutedDate");

                    b.Property<Guid>("LeadId");

                    b.Property<string>("LeadOutput");

                    b.HasKey("ID");

                    b.ToTable("LeadFileGeneration");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.LookupData", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("LookupDatas");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlogName");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedDate");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActivatedDate");

                    b.Property<bool?>("BatchProduct");

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("DeactivatedDate");

                    b.Property<bool>("IsPostpaid");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<bool?>("LeadProduct");

                    b.Property<string>("Name");

                    b.Property<Guid>("ServiceId");

                    b.Property<bool>("Status");

                    b.Property<string>("UsageType");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.ProductCategory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("ProductCategorys");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.ProductDataType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("ProductDataTypes");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.ProductPackageRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IsDeleted");

                    b.Property<int>("MaxLimit");

                    b.Property<int>("MinLimit");

                    b.Property<Guid>("ProductId");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPackageRates");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<Guid?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsAutoBilled");

                    b.Property<int>("Number");

                    b.Property<string>("SubDisplayNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.SubscriptionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillingType");

                    b.Property<int>("Duration");

                    b.Property<DateTime>("EndDate");

                    b.Property<decimal>("ProRataNetAmount");

                    b.Property<decimal>("ProRataPrice");

                    b.Property<Guid>("ProductPackageId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("Rate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.Property<Guid>("SubscriptionId");

                    b.Property<bool?>("isBilled");

                    b.HasKey("Id");

                    b.HasIndex("ProductPackageId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionItems");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.TrailUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusinessRegisterNumber");

                    b.Property<int>("Credits");

                    b.Property<DateTime>("Date");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.Property<bool>("isExpired");

                    b.HasKey("ID");

                    b.ToTable("TrailUsers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.TrailUserLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreditPoints");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Idorpassportnumber");

                    b.Property<string>("InputType");

                    b.Property<string>("Logtype");

                    b.Property<Guid>("ProductPackageId");

                    b.Property<string>("SearchCriteria");

                    b.Property<string>("Searchtype");

                    b.Property<Guid>("TrailUserId");

                    b.HasKey("ID");

                    b.HasIndex("TrailUserId");

                    b.ToTable("TrailUserLogs");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Emailid");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<string>("LoginName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.UserPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AddAction");

                    b.Property<bool>("EditAction");

                    b.Property<string>("FormName");

                    b.Property<Guid>("UserId");

                    b.Property<bool>("ViewAction");

                    b.Property<bool>("privileged");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("Inspirit.IDAS.InvoiceAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Attachment");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<string>("InvoiceNumber");

                    b.HasKey("Id");

                    b.ToTable("InvoiceAttachments");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.BatchTrace", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.CustomerUser", "CustomerUser")
                        .WithMany()
                        .HasForeignKey("CustomerUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerDSA", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.DataServicesAgreement", "DataServicesAgreement")
                        .WithMany()
                        .HasForeignKey("DataServicesAgreementId");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerLog", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.CustomerUser", "CustomerUser")
                        .WithMany()
                        .HasForeignKey("CustomerUserId");

                    b.HasOne("Inspirit.IDAS.Data.IDAS.Workorder", "Workorder")
                        .WithMany()
                        .HasForeignKey("WorkorderId");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerProduct", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.CustomerUser", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany("CustomerUsers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Creditnote", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.IDAS.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Invoice", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.InvoiceLineItem", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.IDAS.Invoice")
                        .WithMany("InvoiceLineItems")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.ProductPackageRate", "ProductPackageRate")
                        .WithMany()
                        .HasForeignKey("ProductPackageRateID");

                    b.HasOne("Inspirit.IDAS.Data.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Payment", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Inspirit.IDAS.Data.IDAS.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.ProFormaInvoice", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.ProformaInvoiceLineItem", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.IDAS.ProFormaInvoice", "ProFormaInvoice")
                        .WithMany("ProformaInvoiceLineItems")
                        .HasForeignKey("ProformaInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.SubscriptionLicense", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.CustomerUser", "CustomerUser")
                        .WithMany()
                        .HasForeignKey("CustomerUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemId");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.IDAS.Workorder", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.ProductPackageRate", "ProductPackage")
                        .WithMany()
                        .HasForeignKey("ProductPackageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Product", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.ProductPackageRate", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Product", "Product")
                        .WithMany("PackageRates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Subscription", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.SubscriptionItem", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.ProductPackageRate", "ProductPackage")
                        .WithMany()
                        .HasForeignKey("ProductPackageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Subscription", "Subscription")
                        .WithMany("SubscriptionItems")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.TrailUserLog", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.TrailUser", "trailUsers")
                        .WithMany()
                        .HasForeignKey("TrailUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.UserPermission", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.User")
                        .WithMany("UserPermissionslist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
