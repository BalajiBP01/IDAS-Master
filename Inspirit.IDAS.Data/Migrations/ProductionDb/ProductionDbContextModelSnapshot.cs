// <auto-generated />
using System;
using Inspirit.IDAS.Data.Production;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inspirit.IDAS.Data.Migrations.ProductionDb
{
    [DbContext(typeof(ProductionDbContext))]
    partial class ProductionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressDetial");

                    b.Property<long?>("CommercialAddressID");

                    b.Property<int?>("CommercialAddressID1");

                    b.Property<long?>("ConsumerAddressID");

                    b.Property<long?>("DirectorAddressID");

                    b.Property<int?>("DirectorAddressID1");

                    b.Property<DateTime?>("LastUpdated");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Province");

                    b.Property<string>("Region");

                    b.Property<string>("Suburb");

                    b.Property<string>("Type");

                    b.HasKey("ID");

                    b.HasIndex("CommercialAddressID1");

                    b.HasIndex("ConsumerAddressID");

                    b.HasIndex("DirectorAddressID1");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Auditor", b =>
                {
                    b.Property<int?>("AuditorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditorName");

                    b.HasKey("AuditorID");

                    b.ToTable("Auditors");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.AuditorAddress", b =>
                {
                    b.Property<int>("AuditorAddressID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressTypeInd");

                    b.Property<int?>("AuditorID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<string>("OriginalAddress1");

                    b.Property<string>("OriginalAddress2");

                    b.Property<string>("OriginalAddress3");

                    b.Property<string>("OriginalAddress4");

                    b.Property<string>("OriginalPostalCode");

                    b.HasKey("AuditorAddressID");

                    b.HasIndex("AuditorID");

                    b.ToTable("AuditorAddresses");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.AuditorHistory", b =>
                {
                    b.Property<int>("AuditorHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActEndDate");

                    b.Property<DateTime?>("ActStartDate");

                    b.Property<int>("AuditorID");

                    b.Property<string>("AuditorName");

                    b.Property<string>("AuditorStatusCode");

                    b.Property<long?>("CommercialAuditorID");

                    b.Property<long?>("CommercialID");

                    b.Property<DateTime?>("LoadDate");

                    b.HasKey("AuditorHistoryID");

                    b.HasIndex("AuditorID");

                    b.ToTable("AuditorHistory");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Commercial", b =>
                {
                    b.Property<int>("CommercialID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmountPerShare")
                        .HasColumnType("numeric(19, 1)");

                    b.Property<string>("BusinessDesc");

                    b.Property<DateTime?>("BusinessStartDate");

                    b.Property<string>("BussEmail");

                    b.Property<string>("BussWebsite");

                    b.Property<string>("CommercialName");

                    b.Property<string>("CommercialShortName");

                    b.Property<string>("CommercialStatusCode");

                    b.Property<string>("CommercialTranslatedName");

                    b.Property<string>("CommercialTypeCode");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("FinancialEffectiveDate");

                    b.Property<int?>("FinancialYearEnd");

                    b.Property<string>("IDNo")
                        .HasMaxLength(20);

                    b.Property<bool>("IsESSynced");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<decimal?>("NoOfShares")
                        .HasColumnType("numeric(28, 9)");

                    b.Property<int?>("Premium");

                    b.Property<string>("PreviousBusinessname");

                    b.Property<string>("RecordStatusInd");

                    b.Property<DateTime?>("RegistrationDate");

                    b.Property<string>("RegistrationNo");

                    b.Property<string>("RegistrationNoOld");

                    b.Property<string>("SICCode");

                    b.Property<long?>("VATNo");

                    b.HasKey("CommercialID");

                    b.ToTable("Commercials");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialAddress", b =>
                {
                    b.Property<int>("CommercialAddressID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressTypeInd");

                    b.Property<int>("CommercialID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<string>("OriginalAddress1");

                    b.Property<string>("OriginalAddress2");

                    b.Property<string>("OriginalAddress3");

                    b.Property<string>("OriginalAddress4");

                    b.Property<string>("OriginalPostalCode");

                    b.Property<string>("occupantTypeInd");

                    b.Property<string>("province");

                    b.HasKey("CommercialAddressID");

                    b.HasIndex("CommercialID");

                    b.ToTable("CommercialAddresses");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialAuditor", b =>
                {
                    b.Property<int>("CommercialAuditorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActEndDate");

                    b.Property<DateTime?>("ActStartDate");

                    b.Property<int?>("AuditorID");

                    b.Property<string>("AuditorName");

                    b.Property<string>("AuditorStatusCode");

                    b.Property<string>("AuditorTypeCode");

                    b.Property<int>("CommercialID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<string>("ProfessionCode");

                    b.Property<string>("ProfessionNo");

                    b.HasKey("CommercialAuditorID");

                    b.HasIndex("CommercialID");

                    b.ToTable("CommercialAuditors");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialDirector", b =>
                {
                    b.Property<int>("CommercialDirectorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AppointmentDate");

                    b.Property<int>("CommercialID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<string>("DirectorDesignationCode");

                    b.Property<int?>("DirectorID");

                    b.Property<DateTime?>("DirectorSetDate");

                    b.Property<string>("DirectorStatusCode");

                    b.Property<DateTime?>("DirectorStatusDate");

                    b.Property<string>("DirectorTypeCode");

                    b.Property<string>("Estate");

                    b.Property<bool?>("IsRSAResidentYN");

                    b.Property<decimal?>("MemberControlPerc");

                    b.Property<decimal?>("MemberSize");

                    b.Property<string>("Profession");

                    b.Property<string>("RecordStatusInd")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("RegisterNo");

                    b.Property<string>("TrusteeOf");

                    b.HasKey("CommercialDirectorID");

                    b.HasIndex("CommercialID");

                    b.HasIndex("DirectorID");

                    b.ToTable("CommercialDirectors");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialJudgement", b =>
                {
                    b.Property<int>("CommercialJudgmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasMaxLength(100);

                    b.Property<string>("Address3")
                        .HasMaxLength(100);

                    b.Property<string>("Address4")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress1")
                        .HasMaxLength(200);

                    b.Property<string>("AttorneyAddress2")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress3")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress4")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyFaxCode")
                        .HasMaxLength(5);

                    b.Property<string>("AttorneyFaxNo")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyName")
                        .HasMaxLength(200);

                    b.Property<string>("AttorneyPostalCode")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyTelephoneCode")
                        .HasMaxLength(5);

                    b.Property<string>("AttorneyTelephoneNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CaseFilingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CaseNumber")
                        .HasMaxLength(50);

                    b.Property<string>("CaseReason")
                        .HasMaxLength(250);

                    b.Property<string>("CaseType")
                        .HasMaxLength(100);

                    b.Property<string>("CellularNo")
                        .HasMaxLength(50);

                    b.Property<int>("CommercialID");

                    b.Property<string>("CommercialName")
                        .HasMaxLength(150);

                    b.Property<int?>("CourtCaseID");

                    b.Property<string>("CourtCity")
                        .HasMaxLength(200);

                    b.Property<string>("CourtName")
                        .HasMaxLength(200);

                    b.Property<string>("CourtType")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreatedOnDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DisputeAmt")
                        .HasColumnType("decimal(18, 9)");

                    b.Property<DateTime?>("DisputeDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DisputeResolvedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxCode")
                        .HasMaxLength(5);

                    b.Property<string>("FaxNo")
                        .HasMaxLength(50);

                    b.Property<string>("HomeTelephoneCode")
                        .HasMaxLength(5);

                    b.Property<string>("HomeTelephoneNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Plaintiff1Address")
                        .HasMaxLength(100);

                    b.Property<string>("PlaintiffName")
                        .HasMaxLength(200);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10);

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(100);

                    b.Property<bool?>("Rescinded");

                    b.Property<string>("RescindedAmount")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("RescissionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RescissionReason")
                        .HasMaxLength(200);

                    b.Property<string>("WorkTelephoneCode")
                        .HasMaxLength(5);

                    b.Property<string>("WorkTelephoneNo")
                        .HasMaxLength(50);

                    b.HasKey("CommercialJudgmentID");

                    b.HasIndex("CommercialID");

                    b.ToTable("CommercialJudgements");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialTelephone", b =>
                {
                    b.Property<int>("CommercialTelephoneID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommercialID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<string>("DeletedReason");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("RecordStatusInd");

                    b.Property<string>("TelephoneCode");

                    b.Property<string>("TelephoneNo");

                    b.Property<string>("TelephoneTypeInd");

                    b.HasKey("CommercialTelephoneID");

                    b.HasIndex("CommercialID");

                    b.ToTable("CommercialTelephones");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Consumer", b =>
                {
                    b.Property<long>("ConsumerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alloy");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<string>("FirstInitial");

                    b.Property<string>("FirstName");

                    b.Property<byte?>("GenderInd");

                    b.Property<string>("IDNO");

                    b.Property<bool>("IsESSynced");

                    b.Property<string>("LSM");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("MaidenName");

                    b.Property<string>("PassportNo");

                    b.Property<byte>("RecordStatusInd");

                    b.Property<string>("SecondName");

                    b.Property<string>("Surname");

                    b.Property<string>("ThirdName");

                    b.Property<string>("TitleCode");

                    b.HasKey("ConsumerID");

                    b.HasIndex("IDNO");

                    b.HasIndex("PassportNo");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerAddress", b =>
                {
                    b.Property<long>("ConsumerAddressID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressTypeInd");

                    b.Property<DateTime?>("ChangedOnDate");

                    b.Property<long>("ConsumerID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("OccupantTypeInd");

                    b.Property<string>("OriginalAddress1");

                    b.Property<string>("OriginalAddress2");

                    b.Property<string>("OriginalAddress3");

                    b.Property<string>("OriginalAddress4");

                    b.Property<string>("OriginalPostalCode");

                    b.Property<string>("Province");

                    b.Property<int>("RecordStatusInd");

                    b.Property<string>("Region");

                    b.Property<string>("Town");

                    b.HasKey("ConsumerAddressID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerAddresses");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerDebtReview", b =>
                {
                    b.Property<long>("ConsumerDebtReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApplicationCreationDate")
                        .HasColumnType("datetime");

                    b.Property<long>("ConsumerID");

                    b.Property<string>("DebtCounsellorFirstName")
                        .HasMaxLength(100);

                    b.Property<string>("DebtCounsellorRegistrationNo")
                        .HasMaxLength(50);

                    b.Property<string>("DebtCounsellorSurname")
                        .HasMaxLength(100);

                    b.Property<string>("DebtCounsellorTelephoneCode")
                        .HasMaxLength(5);

                    b.Property<string>("DebtCounsellorTelephoneNo")
                        .HasMaxLength(50);

                    b.Property<string>("DebtReviewStatusCode")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("DebtReviewStatusDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("RecordStatusInd");

                    b.HasKey("ConsumerDebtReviewID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerDebtReviews");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerEmailConfirmed", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsumerID");

                    b.Property<DateTime?>("CreatedOnDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailID")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("RecordStatusInd");

                    b.HasKey("ID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerEmails");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerEmployment", b =>
                {
                    b.Property<long>("ConsumerEmploymentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsumerID");

                    b.Property<DateTime>("CreatedOnDate");

                    b.Property<string>("EmployerDetail");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<byte>("RecordStatusInd");

                    b.HasKey("ConsumerEmploymentID");

                    b.ToTable("ConsumerEmployments");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerEmploymentOccupation", b =>
                {
                    b.Property<int>("ConsumerEmploymentOccupationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsumerEmploymentID");

                    b.Property<long?>("ConsumerID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<string>("Occupation");

                    b.Property<string>("employer");

                    b.HasKey("ConsumerEmploymentOccupationID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerEmploymentOccupations");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerHomeAffair", b =>
                {
                    b.Property<int>("HomeAffairsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("CauseOfDeath");

                    b.Property<string>("ChangedByUser");

                    b.Property<DateTime?>("ChangedOnDate");

                    b.Property<long>("ConsumerID");

                    b.Property<string>("CreatedByUser");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("DeceasedDate");

                    b.Property<string>("DeceasedStatus");

                    b.Property<string>("DeletedReason");

                    b.Property<DateTime?>("DivorceDate");

                    b.Property<string>("DivorceIssuedCourt");

                    b.Property<string>("FirstName");

                    b.Property<int?>("HARecordChecksum");

                    b.Property<string>("HomeAffairsMessage");

                    b.Property<bool>("HomeAffairsRunYN");

                    b.Property<DateTime?>("IDIssuedDate");

                    b.Property<string>("IDNo");

                    b.Property<bool?>("IsPossibleDuplicateRecordYN");

                    b.Property<bool?>("IsPossibleNameConflictYN");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<int?>("LoaderID");

                    b.Property<string>("MaidenName");

                    b.Property<DateTime?>("MarriageDate");

                    b.Property<string>("NameCombo");

                    b.Property<string>("PlaceOfDeath");

                    b.Property<string>("PlaceOfMarriage");

                    b.Property<string>("RecordStatusInd");

                    b.Property<string>("SecondName");

                    b.Property<string>("SpouseForeNames");

                    b.Property<string>("SpouseIdnoOrDOB");

                    b.Property<string>("SpouseSurName");

                    b.Property<int?>("SubscriberID");

                    b.Property<string>("Surname");

                    b.Property<string>("ThirdName");

                    b.HasKey("HomeAffairsID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerHomeAffairs");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerJudgement", b =>
                {
                    b.Property<long>("ConsumerJudgementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttorneyAddress1")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress2")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress3")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyAddress4")
                        .HasMaxLength(100);

                    b.Property<string>("AttorneyFaxCode")
                        .HasMaxLength(5);

                    b.Property<string>("AttorneyFaxNo")
                        .HasMaxLength(50);

                    b.Property<string>("AttorneyName")
                        .HasMaxLength(200);

                    b.Property<string>("AttorneyPostalCode")
                        .HasMaxLength(10);

                    b.Property<string>("AttorneyTelephoneCode")
                        .HasMaxLength(5);

                    b.Property<string>("AttorneyTelephoneNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CaseFilingDate")
                        .HasColumnType("date");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CaseReason")
                        .HasMaxLength(250);

                    b.Property<string>("CaseType")
                        .HasMaxLength(100);

                    b.Property<long>("ConsumerID");

                    b.Property<string>("CourtCity")
                        .HasMaxLength(100);

                    b.Property<string>("CourtName")
                        .HasMaxLength(100);

                    b.Property<string>("CourtType")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedOnDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DisputeAmt")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("DisputeDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DisputeResolvedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IDNo")
                        .HasMaxLength(13);

                    b.Property<string>("JudgementTypeCode")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PlaintiffAddress1")
                        .HasMaxLength(100);

                    b.Property<string>("PlaintiffAddress2")
                        .HasMaxLength(100);

                    b.Property<string>("PlaintiffAddress3")
                        .HasMaxLength(100);

                    b.Property<string>("PlaintiffAddress4")
                        .HasMaxLength(100);

                    b.Property<string>("PlaintiffName")
                        .HasMaxLength(200);

                    b.Property<string>("PlaintiffPostalCode")
                        .HasMaxLength(10);

                    b.Property<bool?>("Rescinded");

                    b.Property<string>("RescindedAmount")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("RescissionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RescissionReason")
                        .HasMaxLength(100);

                    b.HasKey("ConsumerJudgementID");

                    b.HasIndex("ConsumerID");

                    b.ToTable("ConsumerJudgements");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerOccupation", b =>
                {
                    b.Property<int>("ConsumerEmploymentOccupationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsumerEmploymentID");

                    b.Property<int?>("ConsumerID");

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<DateTime?>("LastUpdatedDate");

                    b.Property<string>("Occupation");

                    b.Property<byte>("RecordStatusInd");

                    b.HasKey("ConsumerEmploymentOccupationID");

                    b.ToTable("ConsumerOccupations");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerTelephone", b =>
                {
                    b.Property<long>("ConsumerTelephoneID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedonDate");

                    b.Property<long>("ConsumerID");

                    b.Property<DateTime>("CreatedonDate");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<byte>("RecordStatusInd");

                    b.Property<long>("TelephoneID");

                    b.Property<byte?>("TelephoneTypeInd");

                    b.HasKey("ConsumerTelephoneID");

                    b.HasIndex("ConsumerID");

                    b.HasIndex("TelephoneID");

                    b.ToTable("ConsumerTelephones");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Dashboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("InsertCount");

                    b.Property<string>("TableName");

                    b.Property<long>("TotalCount");

                    b.Property<long>("UpdateCount");

                    b.Property<long>("YearToDateUpdate");

                    b.HasKey("Id");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Director", b =>
                {
                    b.Property<int>("DirectorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DirectorDesignationCode");

                    b.Property<DateTime?>("DirectorSetDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DirectorStatusCode");

                    b.Property<DateTime?>("DirectorStatusDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DirectorTypeCode");

                    b.Property<string>("Estate");

                    b.Property<string>("FirstInitial");

                    b.Property<string>("FirstName");

                    b.Property<string>("IDNo");

                    b.Property<bool?>("IsRSAResidentYN");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("MemberControlPerc");

                    b.Property<decimal?>("MemberSize");

                    b.Property<string>("Profession");

                    b.Property<string>("RecordStatusInd")
                        .HasMaxLength(1);

                    b.Property<string>("RegisterNo");

                    b.Property<string>("SecondInitial");

                    b.Property<string>("SecondName");

                    b.Property<string>("Surname");

                    b.Property<string>("SurnameParticular");

                    b.Property<string>("SurnamePrevious");

                    b.Property<string>("TrusteeOf");

                    b.HasKey("DirectorID");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.DirectorAddress", b =>
                {
                    b.Property<int>("DirectorAddressID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DirectorID");

                    b.Property<string>("addressTypeInd");

                    b.Property<DateTime>("createdOnDate");

                    b.Property<DateTime>("lastUpdatedDate");

                    b.Property<string>("occupantTypeInd");

                    b.Property<string>("originalAddress1");

                    b.Property<string>("originalAddress2");

                    b.Property<string>("originalAddress3");

                    b.Property<string>("originalAddress4");

                    b.Property<string>("originalPostalCode");

                    b.Property<string>("province");

                    b.HasKey("DirectorAddressID");

                    b.HasIndex("DirectorID");

                    b.ToTable("DirectorAddresses");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.DirectorTelephone", b =>
                {
                    b.Property<int>("DirectorTelephoneID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOnDate");

                    b.Property<string>("DeletedReason");

                    b.Property<int>("DirectorID");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("RecordStatusInd");

                    b.Property<string>("TelephoneCode");

                    b.Property<string>("TelephoneNo");

                    b.Property<string>("TelephoneTypeInd");

                    b.HasKey("DirectorTelephoneID");

                    b.HasIndex("DirectorID");

                    b.ToTable("DirectorTelephones");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Endorsement", b =>
                {
                    b.Property<int>("EndorsementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedByUser");

                    b.Property<DateTime?>("ChangedOnDate");

                    b.Property<string>("CreateByUser");

                    b.Property<DateTime>("CreatedOnDate");

                    b.Property<int?>("DeedsLoaderID");

                    b.Property<int?>("EndorsementAmount");

                    b.Property<string>("EndorsementHolder");

                    b.Property<string>("EndorsementNumber");

                    b.Property<int?>("PropertyDeedID");

                    b.Property<string>("RecordStatusInd");

                    b.HasKey("EndorsementID");

                    b.HasIndex("PropertyDeedID");

                    b.ToTable("Endorsements");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.LastETLProcessedDate", b =>
                {
                    b.Property<DateTime>("ProcessedDate");

                    b.HasKey("ProcessedDate");

                    b.ToTable("LastETLProcessedDate");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Log", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogDescription");

                    b.Property<DateTime>("LogTime");

                    b.Property<string>("LogType");

                    b.Property<string>("TableName");

                    b.HasKey("LogId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.LSM", b =>
                {
                    b.Property<long>("CONSUMERID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IDNO");

                    b.Property<string>("IncomeCategory");

                    b.Property<string>("RiskCategory");

                    b.HasKey("CONSUMERID");

                    b.ToTable("LSM");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Postalcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("Box_Code");

                    b.Property<string>("Str_Code");

                    b.Property<string>("Suburb");

                    b.HasKey("ID");

                    b.ToTable("Postalcodes");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.PropertyDeed", b =>
                {
                    b.Property<int>("PropertyDeedID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttorneyFileNumber");

                    b.Property<string>("AttorneyFirmNumber");

                    b.Property<string>("Authority");

                    b.Property<long?>("BondAmount");

                    b.Property<string>("BondHolder");

                    b.Property<string>("BondNumber");

                    b.Property<int?>("ChangedByLoaderID");

                    b.Property<DateTime?>("CreatedOndate");

                    b.Property<DateTime?>("DateCaptured");

                    b.Property<DateTime?>("DatePurchase");

                    b.Property<DateTime?>("DateRegister");

                    b.Property<int>("DeedsOfficeId");

                    b.Property<string>("Erf");

                    b.Property<string>("ErfSize");

                    b.Property<string>("Extent");

                    b.Property<int?>("IsCurrOwnerUpdated");

                    b.Property<bool?>("IsCurrentOwner");

                    b.Property<string>("MunicipalityName");

                    b.Property<int?>("Portion");

                    b.Property<string>("PortionNo");

                    b.Property<string>("PrevExtent");

                    b.Property<string>("PropertyName");

                    b.Property<string>("PropertyType");

                    b.Property<byte?>("ProvinceId");

                    b.Property<decimal?>("PurchaseAmount");

                    b.Property<string>("RecordStatusInd")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("SchemeId");

                    b.Property<string>("StandNo");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("StreetType");

                    b.Property<string>("SuburbCode");

                    b.Property<string>("SuburbDeeds");

                    b.Property<short?>("SuburbId");

                    b.Property<int?>("TitleDeedFee");

                    b.Property<string>("TitleDeedNo");

                    b.Property<string>("TitleDeedNoOLD");

                    b.Property<string>("Town");

                    b.Property<int?>("TownShipNo");

                    b.Property<int?>("TransferSeqNo");

                    b.Property<int?>("Unit");

                    b.Property<decimal?>("X");

                    b.Property<decimal?>("Y");

                    b.HasKey("PropertyDeedID");

                    b.ToTable("PropertyDeeds");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.PropertyDeedBuyer", b =>
                {
                    b.Property<int>("BuyerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerIDNO");

                    b.Property<string>("BuyerName");

                    b.Property<string>("BuyerStatus");

                    b.Property<byte?>("BuyerType");

                    b.Property<DateTime>("CreatedOndate");

                    b.Property<int?>("PropertyDeedId");

                    b.Property<string>("RecordStatusInd")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Share");

                    b.HasKey("BuyerID");

                    b.HasIndex("PropertyDeedId");

                    b.ToTable("PropertyDeedBuyers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.PropertyDeedSeller", b =>
                {
                    b.Property<int>("SellerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOndate");

                    b.Property<int?>("PropertyDeedId");

                    b.Property<string>("RecordStatusInd")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("SellerIDNO");

                    b.Property<string>("SellerName");

                    b.Property<string>("SellerStatus");

                    b.Property<byte?>("SellerType");

                    b.HasKey("SellerID");

                    b.HasIndex("PropertyDeedId");

                    b.ToTable("PropertyDeedSellers");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Provinces", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code_End");

                    b.Property<int>("Code_Start");

                    b.Property<string>("Province");

                    b.Property<string>("Region");

                    b.HasKey("ID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Telephone", b =>
                {
                    b.Property<long>("TelephoneID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedonDate");

                    b.Property<string>("InternationalDialingCode");

                    b.Property<byte>("RecordStatusInd");

                    b.Property<string>("TelephoneCode");

                    b.Property<long>("TelephoneNo");

                    b.HasKey("TelephoneID");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.TelephoneCode", b =>
                {
                    b.Property<long>("TelephoneCodeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("Region");

                    b.Property<string>("Type");

                    b.HasKey("TelephoneCodeID");

                    b.ToTable("TelephoneCodes");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Address", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.CommercialAddress", "CommercialAddress")
                        .WithMany()
                        .HasForeignKey("CommercialAddressID1");

                    b.HasOne("Inspirit.IDAS.Data.Production.ConsumerAddress", "ConsumerAddress")
                        .WithMany()
                        .HasForeignKey("ConsumerAddressID");

                    b.HasOne("Inspirit.IDAS.Data.Production.DirectorAddress", "DirectorAddress")
                        .WithMany()
                        .HasForeignKey("DirectorAddressID1");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.AuditorAddress", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.CommercialAuditor", "Auditor")
                        .WithMany()
                        .HasForeignKey("AuditorID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.AuditorHistory", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Auditor", "Auditor")
                        .WithMany()
                        .HasForeignKey("AuditorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialAddress", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Commercial", "Commercial")
                        .WithMany("CommercialAddresses")
                        .HasForeignKey("CommercialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialAuditor", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Commercial", "Commercial")
                        .WithMany("CommercialAuditors")
                        .HasForeignKey("CommercialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialDirector", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Commercial", "Commercial")
                        .WithMany("CommercialDirectors")
                        .HasForeignKey("CommercialID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Production.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialJudgement", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Commercial")
                        .WithMany("CommercialJudgements")
                        .HasForeignKey("CommercialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.CommercialTelephone", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Commercial", "Commercial")
                        .WithMany("CommercialTelephones")
                        .HasForeignKey("CommercialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerAddress", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerAddress")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerDebtReview", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerDebtReviews")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerEmailConfirmed", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerEmails")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerEmploymentOccupation", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerEmploymentOccupations")
                        .HasForeignKey("ConsumerID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerHomeAffair", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerHomeAffairs")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerJudgement", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer")
                        .WithMany("ConsumerJudgements")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.ConsumerTelephone", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Consumer", "Consumer")
                        .WithMany("ConsumerTelephone")
                        .HasForeignKey("ConsumerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Inspirit.IDAS.Data.Production.Telephone", "Telephone")
                        .WithMany()
                        .HasForeignKey("TelephoneID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.DirectorAddress", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.DirectorTelephone", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.Endorsement", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.PropertyDeed", "propertydeed")
                        .WithMany()
                        .HasForeignKey("PropertyDeedID");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.PropertyDeedBuyer", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.PropertyDeed", "PropertyDeed")
                        .WithMany()
                        .HasForeignKey("PropertyDeedId");
                });

            modelBuilder.Entity("Inspirit.IDAS.Data.Production.PropertyDeedSeller", b =>
                {
                    b.HasOne("Inspirit.IDAS.Data.Production.PropertyDeed", "PropertyDeed")
                        .WithMany()
                        .HasForeignKey("PropertyDeedId");
                });
#pragma warning restore 612, 618
        }
    }
}
