{"remainingRequest":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\formatter\\html-formatter.js","dependencies":[{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\formatter\\html-formatter.js","mtime":499175100000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510942300000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518061566000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { Formatter } from './formatter';\r\nimport { EditorManager } from './../../editor-manager/base/editor-manager';\r\nimport { extend } from '@syncfusion/ej2-base';\r\nimport { htmlKeyConfig } from './../../common/config';\r\n/**\r\n * HTML adapter\r\n * @hidden\r\n */\r\nvar HTMLFormatter = /*@__PURE__*/ (function (_super) {\r\n    __extends(HTMLFormatter, _super);\r\n    function HTMLFormatter(options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.initialize();\r\n        extend(_this, _this, options, true);\r\n        if (_this.currentDocument && _this.element) {\r\n            _this.updateFormatter(_this.element, _this.currentDocument, options.options);\r\n        }\r\n        return _this;\r\n    }\r\n    HTMLFormatter.prototype.initialize = function () {\r\n        this.keyConfig = htmlKeyConfig;\r\n    };\r\n    /**\r\n     * Update the formatter of RichTextEditor\r\n     * @param  {Element} editElement\r\n     * @param  {Document} doc\r\n     */\r\n    HTMLFormatter.prototype.updateFormatter = function (editElement, doc, options) {\r\n        if (editElement && doc) {\r\n            this.editorManager = new EditorManager({\r\n                document: doc,\r\n                editableElement: editElement,\r\n                options: options\r\n            });\r\n        }\r\n    };\r\n    return HTMLFormatter;\r\n}(Formatter));\r\nexport { HTMLFormatter };\r\n",null]}