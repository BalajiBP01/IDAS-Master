{"remainingRequest":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\editor-manager\\plugin\\image.js","dependencies":[{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\editor-manager\\plugin\\image.js","mtime":499162500000},{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { createElement, isNullOrUndefined, detach, closest, addClass, removeClass } from '@syncfusion/ej2-base';\r\nimport * as CONSTANT from './../base/constant';\r\nimport * as classes from './../base/classes';\r\nimport { InsertHtml } from './inserthtml';\r\n/**\r\n * Link internal component\r\n * @hidden\r\n */\r\nvar ImageCommand = /*@__PURE__*/ (function () {\r\n    /**\r\n     * Constructor for creating the Formats plugin\r\n     * @hidden\r\n     */\r\n    function ImageCommand(parent) {\r\n        this.parent = parent;\r\n        this.addEventListener();\r\n    }\r\n    ImageCommand.prototype.addEventListener = function () {\r\n        this.parent.observer.on(CONSTANT.IMAGE, this.imageCommand, this);\r\n    };\r\n    ImageCommand.prototype.imageCommand = function (e) {\r\n        switch (e.value.toString().toLocaleLowerCase()) {\r\n            case 'image':\r\n            case 'replace':\r\n                this.createImage(e);\r\n                break;\r\n            case 'insertlink':\r\n                this.insertImageLink(e);\r\n                break;\r\n            case 'openimagelink':\r\n                this.openImageLink(e);\r\n                break;\r\n            case 'editimagelink':\r\n                this.editImageLink(e);\r\n                break;\r\n            case 'removeimagelink':\r\n                this.removeImageLink(e);\r\n                break;\r\n            case 'remove':\r\n                this.removeImage(e);\r\n                break;\r\n            case 'alttext':\r\n                this.insertAltTextImage(e);\r\n                break;\r\n            case 'dimension':\r\n                this.imageDimension(e);\r\n                break;\r\n            case 'caption':\r\n                this.imageCaption(e);\r\n                break;\r\n            case 'justifyleft':\r\n                this.imageJustifyLeft(e);\r\n                break;\r\n            case 'justifycenter':\r\n                this.imageJustifyCenter(e);\r\n                break;\r\n            case 'justifyright':\r\n                this.imageJustifyRight(e);\r\n                break;\r\n            case 'inline':\r\n                this.imageInline(e);\r\n                break;\r\n            case 'break':\r\n                this.imageBreak(e);\r\n                break;\r\n        }\r\n    };\r\n    ImageCommand.prototype.createImage = function (e) {\r\n        if (!isNullOrUndefined(e.item.selectParent) && e.item.selectParent[0].tagName === 'IMG') {\r\n            var imgEle = e.item.selectParent[0];\r\n            imgEle.setAttribute('src', e.item.url);\r\n            imgEle.setAttribute('alt', e.item.altText);\r\n        }\r\n        else {\r\n            var imgElement = createElement('img', {\r\n                className: 'e-rte-image ' + e.item.cssClass, attrs: {\r\n                    width: (isNullOrUndefined(e.item.width) || isNullOrUndefined(e.item.width.width)) ? 'auto' :\r\n                        e.item.width.width,\r\n                    height: (isNullOrUndefined(e.item.height) || isNullOrUndefined(e.item.height.height)) ? 'auto' :\r\n                        e.item.height.height,\r\n                    alt: (e.item.altText !== '') ? e.item.altText : ''\r\n                }\r\n            });\r\n            imgElement.setAttribute('src', isNullOrUndefined(e.item.url) ? '' : e.item.url);\r\n            imgElement.style.minWidth = (isNullOrUndefined(e.item.width) || isNullOrUndefined(e.item.width.minWidth)) ? 0 + 'px' :\r\n                e.item.width.minWidth + 'px';\r\n            imgElement.style.maxWidth = (isNullOrUndefined(e.item.width) || isNullOrUndefined(e.item.width.maxWidth)) ? null :\r\n                e.item.width.maxWidth + 'px';\r\n            imgElement.style.minHeight = (isNullOrUndefined(e.item.height) || isNullOrUndefined(e.item.height.minHeight)) ? 0 + 'px' :\r\n                e.item.height.minHeight + 'px';\r\n            imgElement.style.maxHeight = (isNullOrUndefined(e.item.height) || isNullOrUndefined(e.item.height.maxHeight)) ? null :\r\n                e.item.height.maxHeight + 'px';\r\n            if (!isNullOrUndefined(e.item.selection)) {\r\n                e.item.selection.restore();\r\n            }\r\n            InsertHtml.Insert(this.parent.currentDocument, imgElement);\r\n        }\r\n        if (e.callBack) {\r\n            e.callBack({\r\n                requestType: 'Image',\r\n                editorMode: 'HTML',\r\n                event: e.event,\r\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\r\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\r\n            });\r\n        }\r\n    };\r\n    ImageCommand.prototype.insertImageLink = function (e) {\r\n        var anchor = createElement('a', {\r\n            attrs: {\r\n                href: e.item.url,\r\n                target: e.item.target\r\n            }\r\n        });\r\n        anchor.appendChild(e.item.selectNode[0]);\r\n        InsertHtml.Insert(this.parent.currentDocument, anchor);\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.openImageLink = function (e) {\r\n        document.defaultView.open(e.item.url, e.item.target);\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.removeImageLink = function (e) {\r\n        detach(closest(e.item.selectParent[0], 'a'));\r\n        InsertHtml.Insert(this.parent.currentDocument, e.item.insertElement);\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.editImageLink = function (e) {\r\n        e.item.selectNode[0].parentElement.href = e.item.url;\r\n        e.item.selectNode[0].parentElement.target = e.item.target;\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.removeImage = function (e) {\r\n        if (closest(e.item.selectNode[0], 'a')) {\r\n            detach(closest(e.item.selectNode[0], 'a'));\r\n        }\r\n        else if (!isNullOrUndefined(closest(e.item.selectNode[0], '.' + classes.CLASS_CAPTION))) {\r\n            detach(closest(e.item.selectNode[0], '.' + classes.CLASS_CAPTION));\r\n        }\r\n        else {\r\n            detach(e.item.selectNode[0]);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.insertAltTextImage = function (e) {\r\n        e.item.selectNode[0].setAttribute('alt', e.item.altText);\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageDimension = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.style.height = '';\r\n        selectNode.style.width = '';\r\n        selectNode.width = e.item.width;\r\n        selectNode.height = e.item.height;\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageCaption = function (e) {\r\n        InsertHtml.Insert(this.parent.currentDocument, e.item.insertElement);\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageJustifyLeft = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.removeAttribute('class');\r\n        addClass([selectNode], 'e-rte-image');\r\n        if (!isNullOrUndefined(closest(selectNode, '.' + classes.CLASS_CAPTION))) {\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_LEFT);\r\n        }\r\n        if (selectNode.parentElement.nodeName === 'A') {\r\n            removeClass([selectNode.parentElement], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([selectNode.parentElement], classes.CLASS_IMAGE_LEFT);\r\n        }\r\n        else {\r\n            addClass([selectNode], classes.CLASS_IMAGE_LEFT);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageJustifyCenter = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.removeAttribute('class');\r\n        addClass([selectNode], 'e-rte-image');\r\n        if (!isNullOrUndefined(closest(selectNode, '.' + classes.CLASS_CAPTION))) {\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_LEFT);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_CENTER);\r\n        }\r\n        if (selectNode.parentElement.nodeName === 'A') {\r\n            removeClass([selectNode.parentElement], classes.CLASS_IMAGE_LEFT);\r\n            removeClass([selectNode.parentElement], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([selectNode.parentElement], classes.CLASS_IMAGE_CENTER);\r\n        }\r\n        else {\r\n            addClass([selectNode], classes.CLASS_IMAGE_CENTER);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageJustifyRight = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.removeAttribute('class');\r\n        addClass([selectNode], 'e-rte-image');\r\n        if (!isNullOrUndefined(closest(selectNode, '.' + classes.CLASS_CAPTION))) {\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_LEFT);\r\n            addClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_RIGHT);\r\n        }\r\n        if (selectNode.parentElement.nodeName === 'A') {\r\n            removeClass([selectNode.parentElement], classes.CLASS_IMAGE_LEFT);\r\n            addClass([selectNode.parentElement], classes.CLASS_IMAGE_RIGHT);\r\n        }\r\n        else {\r\n            addClass([selectNode], classes.CLASS_IMAGE_RIGHT);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageInline = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.removeAttribute('class');\r\n        addClass([selectNode], 'e-rte-image');\r\n        addClass([selectNode], classes.CLASS_IMAGE_INLINE);\r\n        if (!isNullOrUndefined(closest(selectNode, '.' + classes.CLASS_CAPTION))) {\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_BREAK);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_CENTER);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_LEFT);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_CAPTION_INLINE);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.imageBreak = function (e) {\r\n        var selectNode = e.item.selectNode[0];\r\n        selectNode.removeAttribute('class');\r\n        addClass([selectNode], classes.CLASS_IMAGE_BREAK);\r\n        addClass([selectNode], 'e-rte-image');\r\n        if (!isNullOrUndefined(closest(selectNode, '.' + classes.CLASS_CAPTION))) {\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_CAPTION_INLINE);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_CENTER);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_LEFT);\r\n            removeClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_RIGHT);\r\n            addClass([closest(selectNode, '.' + classes.CLASS_CAPTION)], classes.CLASS_IMAGE_BREAK);\r\n        }\r\n        this.callBack(e);\r\n    };\r\n    ImageCommand.prototype.callBack = function (e) {\r\n        if (e.callBack) {\r\n            e.callBack({\r\n                requestType: e.item.subCommand,\r\n                editorMode: 'HTML',\r\n                event: e.event,\r\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\r\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\r\n            });\r\n        }\r\n    };\r\n    return ImageCommand;\r\n}());\r\nexport { ImageCommand };\r\n",null]}