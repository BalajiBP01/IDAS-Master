{"remainingRequest":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\actions\\html-toolbar-status.js","dependencies":[{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\actions\\html-toolbar-status.js","mtime":499175100000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510942300000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518061566000}],"contextDependencies":[],"result":["import * as events from '../base/constant';\r\nimport { ToolbarStatus } from '../../editor-manager/plugin/toolbar-status';\r\n/**\r\n * HtmlToolbarStatus module for refresh the toolbar status\r\n */\r\nvar HtmlToolbarStatus = /*@__PURE__*/ (function () {\r\n    function HtmlToolbarStatus(parent) {\r\n        this.parent = parent;\r\n        this.addEventListener();\r\n    }\r\n    HtmlToolbarStatus.prototype.addEventListener = function () {\r\n        this.parent.on(events.toolbarRefresh, this.onRefreshHandler, this);\r\n        this.parent.on(events.destroy, this.removeEventListener, this);\r\n    };\r\n    HtmlToolbarStatus.prototype.removeEventListener = function () {\r\n        this.parent.off(events.toolbarRefresh, this.onRefreshHandler);\r\n    };\r\n    HtmlToolbarStatus.prototype.onRefreshHandler = function (args) {\r\n        var fontsize = [];\r\n        var fontName = [];\r\n        var formats = [];\r\n        this.parent.fontSize.items.forEach(function (item) { fontsize.push(item.value); });\r\n        this.parent.fontFamily.items.forEach(function (item) { fontName.push(item.value); });\r\n        this.parent.format.types.forEach(function (item) {\r\n            formats.push(item.value.toLocaleLowerCase());\r\n        });\r\n        this.toolbarStatus = ToolbarStatus.get(this.parent.contentModule.getDocument(), this.parent.contentModule.getEditPanel(), formats, fontsize, fontName, args.documentNode);\r\n        this.parent.notify(events.toolbarUpdated, this.toolbarStatus);\r\n    };\r\n    return HtmlToolbarStatus;\r\n}());\r\nexport { HtmlToolbarStatus };\r\n",null]}