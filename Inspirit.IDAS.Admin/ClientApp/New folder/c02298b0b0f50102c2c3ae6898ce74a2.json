{"remainingRequest":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\actions\\execute-command-callback.js","dependencies":[{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\actions\\execute-command-callback.js","mtime":499175100000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510942300000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518061566000}],"contextDependencies":[],"result":["import * as events from '../base/constant';\r\n/**\r\n * `ExecCommandCallBack` module is used to run the editor manager command\r\n */\r\nvar ExecCommandCallBack = /*@__PURE__*/ (function () {\r\n    function ExecCommandCallBack(parent) {\r\n        this.parent = parent;\r\n        this.addEventListener();\r\n    }\r\n    ExecCommandCallBack.prototype.addEventListener = function () {\r\n        this.parent.on(events.execCommandCallBack, this.commandCallBack, this);\r\n        this.parent.on(events.destroy, this.removeEventListener, this);\r\n    };\r\n    ExecCommandCallBack.prototype.commandCallBack = function (args) {\r\n        if (args.requestType !== 'Undo' && args.requestType !== 'Redo') {\r\n            this.parent.formatter.saveData();\r\n        }\r\n        this.parent.notify(events.toolbarRefresh, { args: args });\r\n        this.parent.notify(events.count, {});\r\n    };\r\n    ExecCommandCallBack.prototype.removeEventListener = function () {\r\n        this.parent.off(events.execCommandCallBack, this.commandCallBack);\r\n        this.parent.off(events.destroy, this.removeEventListener);\r\n    };\r\n    return ExecCommandCallBack;\r\n}());\r\nexport { ExecCommandCallBack };\r\n",null]}