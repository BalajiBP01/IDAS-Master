{"remainingRequest":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\renderer\\render.js","dependencies":[{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\rich-text-editor\\renderer\\render.js","mtime":499162500000},{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\Projects\\IDAS_TFS\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { RenderType } from '../base/enum';\r\nimport * as events from '../base/constant';\r\n/**\r\n * Content module is used to render RichTextEditor content\r\n * @hidden\r\n */\r\nvar Render = /*@__PURE__*/ (function () {\r\n    /**\r\n     * Constructor for render module\r\n     */\r\n    function Render(parent, locator) {\r\n        this.parent = parent;\r\n        this.locator = locator;\r\n        this.renderer = this.locator.getService('rendererFactory');\r\n        this.addEventListener();\r\n    }\r\n    /**\r\n     * To initialize RichTextEditor header, content and footer rendering\r\n     */\r\n    Render.prototype.render = function () {\r\n        var rteObj = this.parent;\r\n        this.contentRenderer = this.renderer.getRenderer(RenderType.Content);\r\n        this.contentRenderer.renderPanel();\r\n    };\r\n    /**\r\n     * Refresh the entire RichTextEditor.\r\n     * @return {void}\r\n     */\r\n    Render.prototype.refresh = function (e) {\r\n        if (e === void 0) {\r\n            e = { requestType: 'refresh' };\r\n        }\r\n        this.parent.notify(e.requestType + \"-begin\", e);\r\n    };\r\n    /**\r\n     * Destroy the entire RichTextEditor.\r\n     * @return {void}\r\n     */\r\n    Render.prototype.destroy = function () {\r\n        this.removeEventListener();\r\n    };\r\n    Render.prototype.addEventListener = function () {\r\n        if (this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.on(events.modelChanged, this.refresh, this);\r\n        this.parent.on(events.keyUp, this.keyUp, this);\r\n    };\r\n    Render.prototype.removeEventListener = function () {\r\n        if (this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.off(events.modelChanged, this.refresh);\r\n        this.parent.off(events.keyUp, this.keyUp);\r\n    };\r\n    Render.prototype.keyUp = function (e) {\r\n        if (this.parent.editorMode === 'HTML') {\r\n            switch (e.args.which) {\r\n                case 46:\r\n                case 8:\r\n                    var childNodes = this.parent.contentModule.getEditPanel().childNodes;\r\n                    if ((childNodes.length === 0) ||\r\n                        (childNodes.length === 1 && ((childNodes[0].tagName === 'BR') ||\r\n                            (childNodes[0].tagName === 'P' &&\r\n                                (childNodes[0].childNodes.length === 0 || childNodes[0].textContent === ''))))) {\r\n                        var node = this.parent.contentModule.getEditPanel();\r\n                        node.innerHTML = '<p><br/></p>';\r\n                        this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), node.childNodes[0], 0);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return Render;\r\n}());\r\nexport { Render };\r\n",null]}