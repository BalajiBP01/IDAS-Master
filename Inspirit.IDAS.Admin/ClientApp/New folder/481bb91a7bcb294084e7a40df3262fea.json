{"remainingRequest":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\editor-manager\\plugin\\inserthtml-exec.js","dependencies":[{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@syncfusion\\ej2-richtexteditor\\src\\editor-manager\\plugin\\inserthtml-exec.js","mtime":499175100000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510942300000},{"path":"H:\\IDAS Admin\\SW Code Backup\\Inspirit.IDAS_new_v3_23-10-2019\\Inspirit.IDAS\\Inspirit.IDAS.Admin\\ClientApp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518061566000}],"contextDependencies":[],"result":["import * as CONSTANT from './../base/constant';\r\nimport { InsertHtml } from './inserthtml';\r\n/**\r\n * Selection EXEC internal component\r\n * @hidden\r\n */\r\nvar InsertHtmlExec = /*@__PURE__*/ (function () {\r\n    /**\r\n     * Constructor for creating the Formats plugin\r\n     * @hidden\r\n     */\r\n    function InsertHtmlExec(parent) {\r\n        this.parent = parent;\r\n        this.addEventListener();\r\n    }\r\n    InsertHtmlExec.prototype.addEventListener = function () {\r\n        this.parent.observer.on(CONSTANT.INSERTHTML_TYPE, this.applyHtml, this);\r\n    };\r\n    InsertHtmlExec.prototype.applyHtml = function (e) {\r\n        InsertHtml.Insert(this.parent.currentDocument, e.value);\r\n        if (e.callBack) {\r\n            e.callBack({\r\n                requestType: e.subCommand,\r\n                editorMode: 'HTML',\r\n                event: e.event,\r\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\r\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\r\n            });\r\n        }\r\n    };\r\n    return InsertHtmlExec;\r\n}());\r\nexport { InsertHtmlExec };\r\n",null]}